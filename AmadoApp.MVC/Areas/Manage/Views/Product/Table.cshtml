@using AmadoApp.Core.Entities
@using PagedList

@model IPagedList<Product>

<h1 class="h3 mb-2 text-gray-800">Product Table</h1>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <a asp-action="Create" asp-controller="Product" class="btn btn-primary mt-4 mb-4"> Create </a>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>N#</th>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Brand</th>
                        <th>Is in Stock</th>
                        <th>Product Image</th>
                        <th>Categories</th>
                        <th>Colors</th>
                        <th>Created Date</th>
                        <th>Update Date</th>
                        <th>CRUD</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var count = (Model.PageNumber - 1) * Model.PageSize;
                        foreach (var item in Model)
                        {
                            count++;
                            if (item.IsDeleted)
                            {
                                <tr style="color: red">
                                    <th>@count</th>
                                    <th>@item.Title</th>
                                    <th>@item.Description</th>
                                    <th>@item.Price</th>
                                    <th>@item.Brand.Name</th>
                                    <th>@(item.IsInStock ? "In Stock" : "Out of Stock")</th>
                                    <th>
                                        <div style="width:100px">
                                            <img width="100%" src="~/Upload/ProductImages/@item.ProductImages.FirstOrDefault()?.ImageUrl">
                                        </div>
                                    </th>
                                    <th>@String.Join(", ", item.ProductCategories.Select(x => x.Category.Name).ToList())</th>
                                    <th>@String.Join(", ", item.ProductColors.Select(x => x.Color.Name).ToList())</th>
                                    <th>@item.CreatedDate.ToString("hh:mm dd/MM/yyyy")</th>
                                    <th>@item.UpdatedDate.ToString("hh:mm dd/MM/yyyy")</th>
                                    <th>
                                        <a asp-action="Update" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-warning">Update</a>
                                        <a asp-action="Detail" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-info">Detail</a>
                                        <a asp-action="Recover" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-success">Recover</a>
                                        <a asp-action="Remove" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-danger">Remove</a>
                                    </th>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <th>@count</th>
                                    <th>@item.Title</th>
                                    <th>@item.Description</th>
                                    <th>@item.Price</th>
                                    <th>@item.Brand.Name</th>
                                    <th>@(item.IsInStock ? "In Stock" : "Out of Stock")</th>
                                    <th>
                                        <div style="width:100px">
                                            <img width="100%" src="~/Upload/ProductImages/@item.ProductImages.FirstOrDefault()?.ImageUrl">
                                        </div>
                                    </th>
                                    <th>@String.Join(", ", item.ProductCategories.Select(x => x.Category.Name).ToList())</th>
                                    <th>@String.Join(", ", item.ProductColors.Select(x => x.Color.Name).ToList())</th>
                                    <th>@item.CreatedDate.ToString("hh:mm dd/MM/yyyy")</th>
                                    <th>@item.UpdatedDate.ToString("hh:mm dd/MM/yyyy")</th>
                                    <th>
                                        @if (User.IsInRole("Moderator"))
                                        {
                                            <a asp-action="Detail" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-info">Detail</a>
                                            <a asp-action="Delete" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                                        }
                                        else
                                        {
                                            <a asp-action="Update" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-warning">Update</a>
                                            <a asp-action="Detail" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-info">Detail</a>
                                            <a asp-action="Delete" asp-controller="Product" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                                        }
                                    </th>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="mt-4 mb-4 d-flex justify-content-center">
        @if (Model.PageCount > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Table", new { page = Model.PageNumber - 1 })">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Table", new { page = i })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Table", new { page = Model.PageNumber + 1 })">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>
